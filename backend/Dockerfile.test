# Base image for building the test environment
FROM node:22-alpine AS builder

# Install necessary dependencies
RUN apk add --no-cache openssl python3 make g++ git

# Set working directory
WORKDIR /usr/src/app

# Copy package files first for caching
COPY package*.json ./

# Install dependencies (match production)
RUN npm install

# Install NestJS CLI globally
RUN npm install -g @nestjs/cli

# Copy Prisma schema and generate Prisma Client **before copying source code**
COPY prisma ./prisma
COPY src ./src
COPY tsconfig.json ./

# Build the application
RUN npx nest build

# Test stage
FROM node:22-alpine

# Set working directory
WORKDIR /usr/src/app

# Install required dependencies
RUN apk add --no-cache openssl python3 make g++

# Copy built files and dependencies from builder stage
COPY --from=builder /usr/src/app/node_modules ./node_modules
COPY --from=builder /usr/src/app/dist ./dist
COPY --from=builder /usr/src/app/prisma ./prisma
COPY --from=builder /usr/src/app/package*.json ./

# Install Prisma Client inside the test container
RUN npm install @prisma/client --save-exact

# Run Prisma Client generation and tests
CMD ["sh", "-c", "npx prisma generate --schema=./prisma/schema.prisma && npm run test"]